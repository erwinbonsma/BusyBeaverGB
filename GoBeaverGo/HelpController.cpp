/*
 * Go Beaver Go, a puzzle game based on a variant of the 2L programming language
 *
 * Copyright 2019, Erwin Bonsma
 */

#include "HelpController.h"

#include <Gamebuino-Meta.h>

#include "Globals.h"
#include "Drawing.h"
#include "MainMenuController.h"

const uint8_t instructionsData[] = {
  32, 47, 1, 0, 1, 0xFF, 1,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x30, 0x10, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x33, 0x30, 0x30, 0x30, 0x10, 0x09, 0x90, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x30, 0x30, 0x10, 0x99, 0x99, 0x99, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x33, 0x30, 0x30, 0x30, 0x10, 0x09, 0x90, 0x09, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x30, 0x10, 0x00, 0x90, 0x09, 0x00, 0x00, 0x00,
  0x0f, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x44, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x04, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x00, 0x30, 0x33, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x33, 0x30, 0x30, 0x30, 0x10, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00,
  0x00, 0x00, 0x00, 0x0b, 0x00, 0x03, 0x00, 0x30, 0x30, 0x10, 0x00, 0x00, 0x09, 0x99, 0x99, 0x90,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x33, 0x30, 0x30, 0x30, 0x10, 0x00, 0x00, 0x09, 0x00, 0x99, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0xb0, 0x30, 0x00, 0x33, 0x30, 0x10, 0x00, 0x00, 0x09, 0x00, 0x90, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x90, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x03, 0x00, 0x33, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x99, 0x99, 0x00, 0x00, 0x10, 0x0b, 0x00, 0x33, 0x30, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x03, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x99, 0x99, 0x00, 0x00, 0x10, 0x0b, 0x00, 0x33, 0x30, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x90, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x30,
  0x07, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0x76, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x06, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x90, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x99, 0x99, 0x00, 0x00, 0x10, 0x0b, 0x00, 0x03, 0x33, 0x33, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x90, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x33, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0xb0, 0xb0, 0x00, 0x00, 0x30, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0xb0, 0xb0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x10, 0x03, 0x30, 0x00, 0x00, 0xb0, 0xb0,
  0x00, 0x00, 0x00, 0x00, 0x09, 0x99, 0x99, 0x00, 0x00, 0x10, 0x33, 0x33, 0x33, 0x00, 0x0b, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x10, 0x03, 0x30, 0x00, 0x00, 0xb0, 0xb0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0xb0, 0xb0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
Image instructionsImage = Image(instructionsData);

void showPage1() {
  gb.display.setColor(BLUE);

  gb.display.drawImage(8, 0, goBeaverGoImage);

  gb.display.setCursor(0, 11);
  gb.display.print("Edit: Use A and B to");
  gb.display.setCursor(0, 18);
  gb.display.print("program with   and");
  gb.display.setCursor(0, 25);
  gb.display.print("Select Run when done");

  gb.display.setCursor(0, 41);
  gb.display.print("Run: Use A to pause,");
  gb.display.setCursor(0, 48);
  gb.display.print("play and step. Use B");
  gb.display.setCursor(0, 55);
  gb.display.print("to return to editing");

  gb.display.setColor(LIGHTBLUE);
  gb.display.setCursor(0, 11);
  gb.display.print("Edit");
  gb.display.setCursor(0, 41);
  gb.display.print("Run");

  gb.display.setColor(WHITE);
  gb.display.setCursor(40, 11);
  gb.display.print("A");
  gb.display.setCursor(64, 11);
  gb.display.print("B");
  gb.display.setCursor(28, 25);
  gb.display.print("Run");
  gb.display.setCursor(36, 41);
  gb.display.print("A");
  gb.display.setCursor(76, 48);
  gb.display.print("B");

  drawInstruction(52, 19, Instruction::Turn);
  drawInstruction(76, 19, Instruction::Data);
}

void showPage2() {
  gb.display.drawImage(8, 0, goBeaverGoImage);

  gb.display.drawImage(24, 12, instructionsImage);
  gb.display.setColor(DARKBLUE);
  gb.display.drawRect(23, 11, 34, 49);
}

void HelpController::activate() {
  _page = 0;
}

void HelpController::update() {
  if (gb.buttons.released(BUTTON_A)) {
    _page++;
    if (_page >= 2) {
      setController(&mainMenuController);
    }
  }
}

void HelpController::draw() {
  switch (_page) {
    case 0:
      showPage1();
      break;
    case 1:
      showPage2();
      break;
    default:
      break;
  }
}
